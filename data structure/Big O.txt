**********************************************************************************
Big O

What is Big O 
        * เครื่องมือพื้นฐานในการวิเคราห์ประสิทธิภาพของ algorithm ในรูปแบบพีชคณิต
        * O(n^2) เรียกว่า"Big O squared" "บิ๊กโอเอ็นกำลังสอง"

        EX 
           นานมาแล้วมีกษัตริย์อินเดียต้องการให้รางวัลกับคนฉลาดคนหนึ่ง
           แต่คนฉลาดไม่ต้องอะไรมากไปกว่าเมล็ดข้าวที่สามารถเติมเต็มตารางหมากรุกได้
           โดยที่ในช่องของตารางหมากรุกจะมีเมล็ดข้าวที่มากกว่าช่องก่อนหน้าอยู่2เท่าตัว

                                |_|_|_|_|_|_|_|_|
                                |_|_|_|_|_|_|_|_|
                                |_|_|_|_|_|_|_|_|
                                |_|_|_|_|_|_|_|_|
                                |_|_|_|_|_|_|_|_|
                                |_|_|_|_|_|_|_|_|
                                |_|_|_|_|_|_|_|_|
                                |_|_|_|_|_|_|_|_|

           จำนวนเมล็ดในแต่ละช่องของตารางหมากรุกคือ 1,2,4,8,16,...,(2^63)

           ถ้าข้าว 1 เมล็ดหนัก 0.01 กรัม กษัตริย์จะให้เม็ดข้าวรวม 1.84*(10^19)
           หรือประมาณ 184 พันลานตัน

           **อัตตราการเติบโต เรามองกันเฉพาะส่วนที่สำคัญเท่านั้น (dominat term)**
           **สำหรับตัวอย่างนี้เป็นการเติบโตแบบ Exponential growth (ยกกำลัง)**
    
**********************************************************************************
Big O, Little O, Big Omega, and Big Theta

        Big O (O()) describes the upper bound of the complexity - worst case.

        Big Omega (Ω()) describes the lower bound of the complexity - Best case.

        Big Theta (Θ()) describes the exact bound of the complexity - Average case.

        Little O (o()) describes the upper bound excluding the exact bound.

**********************************************************************************
Complexity
        ต่ำไปสูง
        O(1) - Constant                 (ดีที่สุด)
        O(log n) - Logarithm            (ก็ยังดี)
        O(n) = Linear                   (ดีอยู่)
        O(n log n ) - Linearithmoc      (กลางๆ)
        O(n^2) , O(n^3) - Polynomial    (ควรเลี่ยง)
        O(2^n) , O(3^n) - Exponetial    (ควรเลี่ยงเป็นอย่างมาก)    

        EX

        Alogrithm Complexity            | Big o
         O(5)                           |  O(1)
         O(3n)                          |  O(n)
         O(2n+1)                        |  O(n)
         O(4n^2 + 2n + 7)               |  O(n^2)
         O(3^n + 2^n + 7)               |  O(3^n)
         O(2^n + n + log n)             |  O(2^n)

**********************************************************************************
